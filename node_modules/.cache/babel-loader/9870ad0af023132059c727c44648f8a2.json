{"ast":null,"code":"//import React from 'react';\nfunction updateState(obj, name) {\n  let obj2 = Object.assign({}, obj);\n\n  if (isNaN(Number(name)) && name !== \".\") {\n    if (name === \"=\") {\n      if (obj2.operation && obj2.op1) {\n        obj2 = ops.calculate(obj2);\n        if (obj2.warning) obj2.op1 = obj2.op2 = obj2.operation = obj2.final = null;else {\n          obj2.final = \"done\";\n          obj2.op2 = obj2.operation = null;\n        }\n      }\n    } else if (name === \"CE\") {\n      obj2.op1 = null;\n    } else if (name === \"C\") {\n      obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\n    } else if (name[0] === \"U\") {\n      if (obj2.op1) {\n        obj2 = ops.calculate(obj2, name);\n        if (!obj2.op2) obj2.final = \"Done\";\n      }\n    } else if (obj2.operation === null) {\n      obj2.op2 = obj2.op1;\n      obj2.op1 = null;\n      obj2.operation = name;\n    } else {\n      if (obj2.op2) {\n        obj2 = ops.calculate(obj2);\n        if (obj2.warning) obj2.op1 = obj2.op2 = obj2.final = obj2.operation = null;else {\n          obj2.op2 = obj2.op1;\n          obj2.op1 = null;\n          obj2.operation = name;\n        }\n      }\n    }\n  } else if (!isNaN(Number(name))) {\n    if (obj2.op1 === null || obj2.final) {\n      obj2.op1 = name;\n      obj2.final = 0;\n      obj2.warning = null;\n    } else obj2.op1 = obj2.op1 + name;\n  } else {\n    if (obj2.op1 === null) obj2.op1 = \"0.\";else obj2.op1 = obj2.op1 + \".\";\n  }\n\n  return obj2;\n}\n\nlet ops = {\n  \"+\": function (num1, num2) {\n    return num1 + num2;\n  },\n  \"*\": function (num1, num2) {\n    return num1 * num2;\n  },\n  \"/\": function (num1, num2) {\n    if (num2 === 0) return \"Err\";\n    return num1 / num2;\n  },\n  \"-\": function (num1, num2) {\n    return num1 - num2;\n  },\n  \"%\": function (num1, num2) {\n    return num1 % num2;\n  },\n  \"Usqrt\": function (num1) {\n    return Math.sqrt(num1);\n  },\n  \"calculate\": function (obj, name) {\n    let obj2 = Object.assign({}, obj);\n    if (!name) obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));else obj2.op1 = \"\" + ops[name](Number(obj2.op1));\n\n    if (obj2.op1 === \"Err\") {\n      obj2.warning = \"Err\";\n    }\n\n    return obj2;\n  }\n};\nexport default updateState;","map":{"version":3,"sources":["C:/Users/vatsal/Documents/React/calculator/src/Calculate.js"],"names":["updateState","obj","name","obj2","Object","assign","isNaN","Number","operation","op1","ops","calculate","warning","op2","final","substr","length","num1","num2","Math","sqrt"],"mappings":"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","sourcesContent":["//import React from 'react';\r\nfunction updateState(obj,name){\r\n    let obj2 = Object.assign({},obj);\r\n  if(isNaN(Number(name)) && name!==\".\"){\r\n      if(name===\"=\"){\r\n        if(obj2.operation && obj2.op1) {\r\n           obj2 = ops.calculate(obj2);\r\n           if(obj2.warning)\r\n             obj2.op1 = obj2.op2 = obj2.operation = obj2.final = null;\r\n           else{\r\n             obj2.final = \"done\"; \r\n             obj2.op2 = obj2.operation = null;\r\n            }\r\n         }\r\n      }\r\n      else if(name===\"CE\"){\r\n        obj2.op1 = null;\r\n      }\r\n      else if(name===\"C\"){\r\n        obj2.op1 = obj2.op1.substr(0,obj2.op1.length-1);\r\n      }\r\n      else if(name[0]===\"U\"){\r\n        if(obj2.op1){\r\n        obj2 = ops.calculate(obj2,name);\r\n        if(!obj2.op2)\r\n          obj2.final = \"Done\";\r\n        }\r\n      }\r\n      else if(obj2.operation===null){\r\n        obj2.op2 = obj2.op1;\r\n        obj2.op1 = null;\r\n        obj2.operation = name;\r\n      }\r\n      else{\r\n        if(obj2.op2){\r\n          obj2 = ops.calculate(obj2);\r\n          if(obj2.warning)\r\n            obj2.op1 = obj2.op2 = obj2.final = obj2.operation = null;\r\n          else{\r\n            obj2.op2 = obj2.op1;\r\n            obj2.op1 = null;\r\n            obj2.operation = name;\r\n            } \r\n         }\r\n      }\r\n  }\r\n  else if(!isNaN(Number(name))){\r\n    if(obj2.op1===null||obj2.final){\r\n        obj2.op1 = name;\r\n        obj2.final = 0;\r\n        obj2.warning = null;\r\n      }\r\n    else\r\n        obj2.op1 = obj2.op1 + name;\r\n  }\r\n  else {\r\n     if(obj2.op1===null)\r\n        obj2.op1 = \"0.\";\r\n     else\r\n        obj2.op1 = obj2.op1 + \".\";\r\n  }\r\n  return obj2;\r\n}\r\n\r\nlet ops = {\r\n    \"+\" : function(num1,num2){\r\n         return num1 + num2;\r\n    },\r\n    \"*\" : function(num1,num2){\r\n      return num1* num2;\r\n    },\r\n    \"/\" : function(num1,num2){\r\n      if(num2===0)\r\n        return \"Err\";\r\n      return num1/num2;\r\n    },\r\n    \"-\" : function(num1,num2){\r\n      return num1-num2;\r\n    },\r\n    \"%\" : function(num1,num2){\r\n      return num1%num2;\r\n    },\r\n    \"Usqrt\": function(num1){\r\n      return Math.sqrt(num1);\r\n    },\r\n    \"calculate\" : function(obj,name){\r\n      let obj2 = Object.assign({},obj);\r\n      if(!name)\r\n        obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2),Number(obj2.op1));\r\n      else\r\n        obj2.op1 = \"\" + ops[name](Number(obj2.op1));\r\n      if(obj2.op1===\"Err\"){\r\n        obj2.warning = \"Err\";\r\n      }\r\n     return obj2;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default updateState;"]},"metadata":{},"sourceType":"module"}