{"ast":null,"code":"//import React from 'react';\nfunction updateState(obj, name) {\n  let obj2 = Object.assign({}, obj);\n\n  if (isNaN(Number(name)) && name !== \".\") {\n    obj2 = state.updateOperation(name, obj);\n  } else {\n    obj2 = state.operands(name, obj);\n  } //   if (name === \"=\") {\n  //     if (obj2.operation && obj2.op1) {\n  //       obj2 = ops.calculate(obj2);\n  //       if (obj2.warning){\n  //         obj2.op2 = obj2.operation  = null;\n  //         obj2.final = \"done\";\n  //         obj2.op1 = 0;\n  //       }\n  //       else {\n  //         obj2.final = \"done\";\n  //         obj2.op2 = obj2.operation = null;\n  //       }\n  //     }\n  //      else if (!obj2.op1 && obj2.operation) {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing second operand\";\n  //     }\n  //   }\n  //    else if (name === \"CE\") {\n  //     obj2.op1 = 0;\n  //   }\n  //    else if (name === \"C\") {\n  //     obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\n  //   }\n  //    else if (name[0] === \"U\") {\n  //     if (obj2.op1) {\n  //       obj2 = ops.calculate(obj2, name);\n  //       if (!obj2.op2)\n  //         obj2.final = \"Done\";\n  //     }\n  //      else {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing operand\";\n  //     }\n  //   }\n  //    else if (obj2.operation === null) {\n  //     obj2.op2 = obj2.op1;\n  //     obj2.warning = \"\";\n  //     obj2.op1 = null;\n  //     obj2.operation = name;\n  //   }\n  //    else {\n  //     if (obj2.op1) {\n  //       obj2 = ops.calculate(obj2);\n  //       if (obj2.warning) {\n  //         obj2.op2 = obj2.final = obj2.operation = null;\n  //         obj2.op1 = 0;\n  //       }\n  //       else {\n  //         obj2.op2 = obj2.op1;\n  //         obj2.op1 = null;\n  //         obj2.operation = name;\n  //       }\n  //     }\n  //      else {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing second operand\";\n  //     }\n  //   }\n  // }\n  //  else if (!isNaN(Number(name))) {\n  //   if (!obj2.op1  || obj2.final) {\n  //     obj2.op1 = name;\n  //     obj2.final = 0;\n  //     obj2.warning = null;\n  //   }\n  //    else\n  //     obj2.op1 = obj2.op1 + name;\n  // }\n  //  else {\n  //   if (obj2.op1 === null)\n  //     obj2.op1 = \"0.\";\n  //   else\n  //     obj2.op1 = obj2.op1 + \".\";\n  // }\n\n\n  return obj2;\n}\n\nlet ops = {\n  \"+\": function (num1, num2) {\n    return num1 + num2;\n  },\n  \"*\": function (num1, num2) {\n    return num1 * num2;\n  },\n  \"/\": function (num1, num2) {\n    if (num2 === 0) return \"Err\";\n    return num1 / num2;\n  },\n  \"-\": function (num1, num2) {\n    return num1 - num2;\n  },\n  \"%\": function (num1, num2) {\n    return num1 % num2;\n  },\n  \"Usqrt\": function (num1) {\n    return Math.sqrt(num1);\n  },\n  \"AC\": function (obj) {\n    obj.op1 = 0;\n    obj.op2 = obj.operation = null;\n    obj.next_op = 1;\n  },\n  \"CE\": function (str) {\n    return str.substr(0, str.length - 1);\n  },\n  \"calculate\": function (obj, name) {\n    let obj2 = Object.assign({}, obj);\n    if (!name) obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));else obj2.op1 = \"\" + ops[name](Number(obj2.op1));\n\n    if (obj2.op1 === \"Err\") {\n      obj2.warning = \"Err\";\n    }\n\n    return obj2;\n  }\n};\nlet state = {\n  next_op: 1,\n  //done: false,\n  operands: function (name, obj) {\n    let obj2 = Object.assign({}, obj);\n\n    if (obj2.next_op) {\n      if (name === \".\") obj2.op1 = \"0.\";\n      obj2.op1 = name;\n      obj2.next_op = 0;\n    } else obj2.op1 = obj2.op1 + name;\n\n    return obj2;\n  },\n  updateOperation: function (name, obj) {\n    obj2 = Object.assign({}, obj);\n    if (name === \"AC\") ops[name](obj2);else if (name === \"=\") {\n      obj2 = ops.calculate(obj2);\n\n      if (obj2.warning) {\n        obj2.op1 = 0;\n      }\n\n      obj2.op2 = obj2.operation = null;\n      obj2.next_op = 1;\n    } else if (name === \"CE\" || name[0] === 'U') obj2.op1 = ops[name](obj2.op1);else {\n      if (obj2.operation === null) {\n        obj2.operation = name;\n        obj2.op2 = obj2.op1;\n        obj2.next_op = 1;\n      } else {\n        if (obj2.op1) {\n          obj2.op1 = obj2.op2 = ops.calculate(obj2);\n\n          if (obj2.warning) {\n            obj2.op1 = 0;\n            obj2.op2 = obj2.operation = null;\n          } else {\n            obj2.operation = name;\n          }\n\n          obj2.next_op = 1;\n        } else {\n          obj2.operation = name;\n          obj2.next_op = 1;\n        }\n      }\n    }\n    return obj2;\n  }\n};\nexport default updateState;","map":{"version":3,"sources":["C:/Users/vatsal/Documents/React/calculator/src/Calculate.js"],"names":["updateState","obj","name","obj2","Object","assign","isNaN","Number","state","updateOperation","operands","ops","num1","num2","Math","sqrt","op1","op2","operation","next_op","str","substr","length","warning","calculate"],"mappings":"AAAA;AACA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC7B,MAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,GAAlB,CAAX;;AACA,MAAIK,KAAK,CAACC,MAAM,CAACL,IAAD,CAAP,CAAL,IAAuBA,IAAI,KAAK,GAApC,EAAyC;AACtCC,IAAAA,IAAI,GAAGK,KAAK,CAACC,eAAN,CAAsBP,IAAtB,EAA2BD,GAA3B,CAAP;AACF,GAFD,MAGK;AACFE,IAAAA,IAAI,GAAGK,KAAK,CAACE,QAAN,CAAeR,IAAf,EAAoBD,GAApB,CAAP;AACF,GAP4B,CAU9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOE,IAAP;AACD;;AAED,IAAIQ,GAAG,GAAG;AACR,OAAK,UAAUC,IAAV,EAAgBC,IAAhB,EAAsB;AACzB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAHO;AAIR,OAAK,UAAUD,IAAV,EAAgBC,IAAhB,EAAsB;AACzB,WAAOD,IAAI,GAAGC,IAAd;AACD,GANO;AAOR,OAAK,UAAUD,IAAV,EAAgBC,IAAhB,EAAsB;AACzB,QAAIA,IAAI,KAAK,CAAb,EACE,OAAO,KAAP;AACF,WAAOD,IAAI,GAAGC,IAAd;AACD,GAXO;AAYR,OAAK,UAAUD,IAAV,EAAgBC,IAAhB,EAAsB;AACzB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAdO;AAeR,OAAK,UAAUD,IAAV,EAAgBC,IAAhB,EAAsB;AACzB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAjBO;AAkBR,WAAS,UAAUD,IAAV,EAAgB;AACvB,WAAOE,IAAI,CAACC,IAAL,CAAUH,IAAV,CAAP;AACD,GApBO;AAqBR,QAAO,UAASX,GAAT,EAAa;AACjBA,IAAAA,GAAG,CAACe,GAAJ,GAAU,CAAV;AACAf,IAAAA,GAAG,CAACgB,GAAJ,GAAUhB,GAAG,CAACiB,SAAJ,GAAgB,IAA1B;AACAjB,IAAAA,GAAG,CAACkB,OAAJ,GAAc,CAAd;AACF,GAzBO;AA0BR,QAAO,UAASC,GAAT,EAAc;AACnB,WAAOA,GAAG,CAACC,MAAJ,CAAW,CAAX,EAAaD,GAAG,CAACE,MAAJ,GAAW,CAAxB,CAAP;AACD,GA5BO;AA6BR,eAAa,UAAUrB,GAAV,EAAeC,IAAf,EAAqB;AAChC,QAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,GAAlB,CAAX;AACA,QAAI,CAACC,IAAL,EACEC,IAAI,CAACa,GAAL,GAAW,KAAKL,GAAG,CAACR,IAAI,CAACe,SAAN,CAAH,CAAoBX,MAAM,CAACJ,IAAI,CAACc,GAAN,CAA1B,EAAsCV,MAAM,CAACJ,IAAI,CAACa,GAAN,CAA5C,CAAhB,CADF,KAGEb,IAAI,CAACa,GAAL,GAAW,KAAKL,GAAG,CAACT,IAAD,CAAH,CAAUK,MAAM,CAACJ,IAAI,CAACa,GAAN,CAAhB,CAAhB;;AACF,QAAIb,IAAI,CAACa,GAAL,KAAa,KAAjB,EAAwB;AACtBb,MAAAA,IAAI,CAACoB,OAAL,GAAe,KAAf;AACD;;AACD,WAAOpB,IAAP;AACD;AAvCO,CAAV;AA4CA,IAAIK,KAAK,GAAG;AACVW,EAAAA,OAAO,EAAE,CADC;AAEV;AACAT,EAAAA,QAAQ,EAAE,UAASR,IAAT,EAAcD,GAAd,EAAkB;AAC1B,QAAIE,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,GAAjB,CAAX;;AACA,QAAGE,IAAI,CAACgB,OAAR,EAAiB;AACd,UAAGjB,IAAI,KAAG,GAAV,EACEC,IAAI,CAACa,GAAL,GAAW,IAAX;AACFb,MAAAA,IAAI,CAACa,GAAL,GAAWd,IAAX;AACAC,MAAAA,IAAI,CAACgB,OAAL,GAAe,CAAf;AACF,KALD,MAOGhB,IAAI,CAACa,GAAL,GAAWb,IAAI,CAACa,GAAL,GAAWd,IAAtB;;AACH,WAAOC,IAAP;AACD,GAdS;AAeVM,EAAAA,eAAe,EAAE,UAASP,IAAT,EAAcD,GAAd,EAAkB;AACjCE,IAAAA,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBJ,GAAjB,CAAP;AACA,QAAGC,IAAI,KAAG,IAAV,EACES,GAAG,CAACT,IAAD,CAAH,CAAUC,IAAV,EADF,KAEK,IAAGD,IAAI,KAAG,GAAV,EAAc;AACjBC,MAAAA,IAAI,GAAGQ,GAAG,CAACa,SAAJ,CAAcrB,IAAd,CAAP;;AACA,UAAGA,IAAI,CAACoB,OAAR,EAAgB;AACdpB,QAAAA,IAAI,CAACa,GAAL,GAAW,CAAX;AACD;;AACDb,MAAAA,IAAI,CAACc,GAAL,GAAWd,IAAI,CAACe,SAAL,GAAiB,IAA5B;AACAf,MAAAA,IAAI,CAACgB,OAAL,GAAe,CAAf;AACD,KAPI,MAQA,IAAGjB,IAAI,KAAG,IAAP,IAAaA,IAAI,CAAC,CAAD,CAAJ,KAAU,GAA1B,EACHC,IAAI,CAACa,GAAL,GAAWL,GAAG,CAACT,IAAD,CAAH,CAAUC,IAAI,CAACa,GAAf,CAAX,CADG,KAED;AACF,UAAGb,IAAI,CAACe,SAAL,KAAiB,IAApB,EAAyB;AACvBf,QAAAA,IAAI,CAACe,SAAL,GAAiBhB,IAAjB;AACAC,QAAAA,IAAI,CAACc,GAAL,GAAWd,IAAI,CAACa,GAAhB;AACAb,QAAAA,IAAI,CAACgB,OAAL,GAAe,CAAf;AACD,OAJD,MAKI;AACF,YAAGhB,IAAI,CAACa,GAAR,EAAY;AACVb,UAAAA,IAAI,CAACa,GAAL,GAAWb,IAAI,CAACc,GAAL,GAAWN,GAAG,CAACa,SAAJ,CAAcrB,IAAd,CAAtB;;AACA,cAAGA,IAAI,CAACoB,OAAR,EAAgB;AACdpB,YAAAA,IAAI,CAACa,GAAL,GAAW,CAAX;AACAb,YAAAA,IAAI,CAACc,GAAL,GAAWd,IAAI,CAACe,SAAL,GAAiB,IAA5B;AACD,WAHD,MAII;AACFf,YAAAA,IAAI,CAACe,SAAL,GAAiBhB,IAAjB;AACD;;AACDC,UAAAA,IAAI,CAACgB,OAAL,GAAe,CAAf;AACD,SAVD,MAWK;AACHhB,UAAAA,IAAI,CAACe,SAAL,GAAiBhB,IAAjB;AACAC,UAAAA,IAAI,CAACgB,OAAL,GAAe,CAAf;AACA;AACF;AACH;AACD,WAAOhB,IAAP;AACD;AAtDS,CAAZ;AAyDA,eAAeH,WAAf","sourcesContent":["//import React from 'react';\r\nfunction updateState(obj, name) {\r\n   let obj2 = Object.assign({}, obj);\r\n   if (isNaN(Number(name)) && name !== \".\") {\r\n      obj2 = state.updateOperation(name,obj);\r\n   }\r\n   else {\r\n      obj2 = state.operands(name,obj);\r\n   }\r\n   \r\n   \r\n  //   if (name === \"=\") {\r\n  //     if (obj2.operation && obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2);\r\n  //       if (obj2.warning){\r\n  //         obj2.op2 = obj2.operation  = null;\r\n  //         obj2.final = \"done\";\r\n  //         obj2.op1 = 0;\r\n  //       }\r\n  //       else {\r\n  //         obj2.final = \"done\";\r\n  //         obj2.op2 = obj2.operation = null;\r\n  //       }\r\n  //     }\r\n  //      else if (!obj2.op1 && obj2.operation) {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing second operand\";\r\n  //     }\r\n\r\n  //   }\r\n  //    else if (name === \"CE\") {\r\n  //     obj2.op1 = 0;\r\n  //   }\r\n  //    else if (name === \"C\") {\r\n  //     obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\r\n  //   }\r\n  //    else if (name[0] === \"U\") {\r\n  //     if (obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2, name);\r\n  //       if (!obj2.op2)\r\n  //         obj2.final = \"Done\";\r\n  //     }\r\n  //      else {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing operand\";\r\n  //     }\r\n  //   }\r\n  //    else if (obj2.operation === null) {\r\n  //     obj2.op2 = obj2.op1;\r\n  //     obj2.warning = \"\";\r\n  //     obj2.op1 = null;\r\n  //     obj2.operation = name;\r\n  //   }\r\n  //    else {\r\n  //     if (obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2);\r\n  //       if (obj2.warning) {\r\n  //         obj2.op2 = obj2.final = obj2.operation = null;\r\n  //         obj2.op1 = 0;\r\n  //       }\r\n  //       else {\r\n  //         obj2.op2 = obj2.op1;\r\n  //         obj2.op1 = null;\r\n  //         obj2.operation = name;\r\n  //       }\r\n  //     }\r\n  //      else {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing second operand\";\r\n  //     }\r\n  //   }\r\n  // }\r\n  //  else if (!isNaN(Number(name))) {\r\n  //   if (!obj2.op1  || obj2.final) {\r\n  //     obj2.op1 = name;\r\n  //     obj2.final = 0;\r\n  //     obj2.warning = null;\r\n  //   }\r\n  //    else\r\n  //     obj2.op1 = obj2.op1 + name;\r\n  // }\r\n  //  else {\r\n  //   if (obj2.op1 === null)\r\n  //     obj2.op1 = \"0.\";\r\n  //   else\r\n  //     obj2.op1 = obj2.op1 + \".\";\r\n  // }\r\n  return obj2;\r\n}\r\n\r\nlet ops = {\r\n  \"+\": function (num1, num2) {\r\n    return num1 + num2;\r\n  },\r\n  \"*\": function (num1, num2) {\r\n    return num1 * num2;\r\n  },\r\n  \"/\": function (num1, num2) {\r\n    if (num2 === 0)\r\n      return \"Err\";\r\n    return num1 / num2;\r\n  },\r\n  \"-\": function (num1, num2) {\r\n    return num1 - num2;\r\n  },\r\n  \"%\": function (num1, num2) {\r\n    return num1 % num2;\r\n  },\r\n  \"Usqrt\": function (num1) {\r\n    return Math.sqrt(num1);\r\n  },\r\n  \"AC\" : function(obj){\r\n     obj.op1 = 0;\r\n     obj.op2 = obj.operation = null;\r\n     obj.next_op = 1;\r\n  },\r\n  \"CE\" : function(str) {\r\n    return str.substr(0,str.length-1);\r\n  },\r\n  \"calculate\": function (obj, name) {\r\n    let obj2 = Object.assign({}, obj);\r\n    if (!name)\r\n      obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));\r\n    else\r\n      obj2.op1 = \"\" + ops[name](Number(obj2.op1));\r\n    if (obj2.op1 === \"Err\") {\r\n      obj2.warning = \"Err\";\r\n    }\r\n    return obj2;\r\n  }\r\n}\r\n\r\n\r\n\r\nlet state = {\r\n  next_op: 1,\r\n  //done: false,\r\n  operands: function(name,obj){\r\n    let obj2 = Object.assign({},obj);\r\n    if(obj2.next_op) {\r\n       if(name===\".\")\r\n         obj2.op1 = \"0.\";\r\n       obj2.op1 = name;\r\n       obj2.next_op = 0;\r\n    }\r\n    else\r\n       obj2.op1 = obj2.op1 + name;\r\n    return obj2;\r\n  },\r\n  updateOperation: function(name,obj){\r\n    obj2 = Object.assign({},obj);\r\n    if(name===\"AC\")\r\n      ops[name](obj2);\r\n    else if(name===\"=\"){\r\n      obj2 = ops.calculate(obj2);\r\n      if(obj2.warning){\r\n        obj2.op1 = 0;\r\n      }\r\n      obj2.op2 = obj2.operation = null;\r\n      obj2.next_op = 1;\r\n    }\r\n    else if(name===\"CE\"||name[0]==='U')\r\n      obj2.op1 = ops[name](obj2.op1);\r\n    else{\r\n      if(obj2.operation===null){\r\n        obj2.operation = name;\r\n        obj2.op2 = obj2.op1;\r\n        obj2.next_op = 1;\r\n      }\r\n      else{\r\n        if(obj2.op1){\r\n          obj2.op1 = obj2.op2 = ops.calculate(obj2);\r\n          if(obj2.warning){\r\n            obj2.op1 = 0;\r\n            obj2.op2 = obj2.operation = null;\r\n          }\r\n          else{\r\n            obj2.operation = name;\r\n          }\r\n          obj2.next_op = 1;\r\n        }\r\n         else{ \r\n          obj2.operation = name;\r\n          obj2.next_op = 1;\r\n         }\r\n       }\r\n    }\r\n    return obj2;\r\n  }\r\n}\r\n\r\nexport default updateState;"]},"metadata":{},"sourceType":"module"}