{"ast":null,"code":"//import React from 'react';\nfunction updateState(obj, name) {\n  // console.log(name === \"CE\");\n  let obj2 = Object.assign({}, obj);\n\n  if (isNaN(Number(name)) && name !== \".\") {\n    obj2 = state.updateOperation(name, obj);\n  } else {\n    obj2 = state.operands(name, obj);\n  } //   if (name === \"=\") {\n  //     if (obj2.operation && obj2.op1) {\n  //       obj2 = ops.calculate(obj2);\n  //       if (obj2.warning){\n  //         obj2.op2 = obj2.operation  = null;\n  //         obj2.final = \"done\";\n  //         obj2.op1 = 0;\n  //       }\n  //       else {\n  //         obj2.final = \"done\";\n  //         obj2.op2 = obj2.operation = null;\n  //       }\n  //     }\n  //      else if (!obj2.op1 && obj2.operation) {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing second operand\";\n  //     }\n  //   }\n  //    else if (name === \"CE\") {\n  //     obj2.op1 = 0;\n  //   }\n  //    else if (name === \"C\") {\n  //     obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\n  //   }\n  //    else if (name[0] === \"U\") {\n  //     if (obj2.op1) {\n  //       obj2 = ops.calculate(obj2, name);\n  //       if (!obj2.op2)\n  //         obj2.final = \"Done\";\n  //     }\n  //      else {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing operand\";\n  //     }\n  //   }\n  //    else if (obj2.operation === null) {\n  //     obj2.op2 = obj2.op1;\n  //     obj2.warning = \"\";\n  //     obj2.op1 = null;\n  //     obj2.operation = name;\n  //   }\n  //    else {\n  //     if (obj2.op1) {\n  //       obj2 = ops.calculate(obj2);\n  //       if (obj2.warning) {\n  //         obj2.op2 = obj2.final = obj2.operation = null;\n  //         obj2.op1 = 0;\n  //       }\n  //       else {\n  //         obj2.op2 = obj2.op1;\n  //         obj2.op1 = null;\n  //         obj2.operation = name;\n  //       }\n  //     }\n  //      else {\n  //       obj2.op2 = obj2.operation = null;\n  //       obj2.op1 = 0;\n  //       obj2.final = \"Done\";\n  //       obj2.warning = \"missing second operand\";\n  //     }\n  //   }\n  // }\n  //  else if (!isNaN(Number(name))) {\n  //   if (!obj2.op1  || obj2.final) {\n  //     obj2.op1 = name;\n  //     obj2.final = 0;\n  //     obj2.warning = null;\n  //   }\n  //    else\n  //     obj2.op1 = obj2.op1 + name;\n  // }\n  //  else {\n  //   if (obj2.op1 === null)\n  //     obj2.op1 = \"0.\";\n  //   else\n  //     obj2.op1 = obj2.op1 + \".\";\n  // }\n\n\n  return obj2;\n}\n\nlet ops = {\n  \"+\": function (num1, num2) {\n    return num1 + num2;\n  },\n  \"*\": function (num1, num2) {\n    return num1 * num2;\n  },\n  \"/\": function (num1, num2) {\n    if (num2 === 0) return \"Err\";\n    return num1 / num2;\n  },\n  \"-\": function (num1, num2) {\n    return num1 - num2;\n  },\n  \"%\": function (num1, num2) {\n    return num1 % num2;\n  },\n  Usqrt: function (num1) {\n    return Math.sqrt(num1);\n  },\n  AC: function (obj) {\n    obj.op1 = \"0\";\n    obj.op2 = obj.operation = obj.warning = null;\n  },\n  CE: function (str) {\n    return str.substr(0, str.length - 1);\n  },\n  calculate: function (obj, name) {\n    let obj2 = Object.assign({}, obj);\n    if (!name) obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));else obj2.op1 = \"\" + ops[name](Number(obj2.op1));\n\n    if (obj2.op1 === \"Err\") {\n      obj2.warning = \"Err\";\n    }\n\n    return obj2;\n  }\n};\nlet state = {\n  next_op: 1,\n  //done: false,\n  operands: function (name, obj) {\n    let obj2 = Object.assign({}, obj);\n    if (!obj2.warning) if (state.next_op) {\n      if (name === \".\") obj2.op1 = \"0.\";else obj2.op1 = name;\n      state.next_op = 0;\n    } else obj2.op1 = obj2.op1 + name;\n    return obj2;\n  },\n  updateOperation: function (name, obj) {\n    let obj2 = Object.assign({}, obj);\n\n    if (!obj2.warning || obj2.warning && name === \"AC\") {\n      if (name === \"AC\") {\n        ops[name](obj2);\n        state.next_op = 1;\n      } else if (name === \"=\") {\n        if (!state.next_op && obj2.operation) {\n          obj2 = ops.calculate(obj2);\n\n          if (obj2.warning) {\n            obj2.op1 = \"0\";\n          }\n        }\n\n        obj2.op2 = obj2.operation = null;\n        state.next_op = 1;\n      } else if (name === \"CE\") {\n        if (!state.next_op) {\n          obj2.op1 = ops[name](obj2.op1);\n          if (obj2.op1 === \"\") state.next_op = 1;\n        }\n      } else if (name[0] === \"U\") obj2.op1 = ops[name](obj2.op1);else {\n        if (obj2.operation === null) {\n          obj2.operation = name;\n          obj2.op2 = obj2.op1;\n          state.next_op = 1;\n        } else {\n          if (!state.next_op) {\n            obj2 = ops.calculate(obj2);\n\n            if (obj2.warning) {\n              obj2.op1 = \"0\";\n              obj2.op2 = obj2.operation = null;\n            } else {\n              obj2.operation = name;\n              obj2.op2 = obj2.op1;\n            }\n\n            state.next_op = 1;\n          } else {\n            obj2.operation = name;\n            state.next_op = 1;\n          }\n        }\n      }\n    }\n\n    return obj2;\n  }\n};\nexport default updateState;","map":{"version":3,"sources":["C:/Users/vatsal/Documents/React/calculator/src/Calculate.js"],"names":["updateState","obj","name","obj2","Object","assign","isNaN","Number","state","updateOperation","operands","ops","num1","num2","Usqrt","Math","sqrt","AC","op1","op2","operation","warning","CE","str","substr","length","calculate","next_op"],"mappings":"AAAA;AACA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,IAA1B,EAAgC;AAC9B;AACA,MAAIC,IAAI,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBJ,GAAlB,CAAX;;AAEA,MAAIK,KAAK,CAACC,MAAM,CAACL,IAAD,CAAP,CAAL,IAAuBA,IAAI,KAAK,GAApC,EAAyC;AACvCC,IAAAA,IAAI,GAAGK,KAAK,CAACC,eAAN,CAAsBP,IAAtB,EAA4BD,GAA5B,CAAP;AACD,GAFD,MAEO;AACLE,IAAAA,IAAI,GAAGK,KAAK,CAACE,QAAN,CAAeR,IAAf,EAAqBD,GAArB,CAAP;AACD,GAR6B,CAU9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAAOE,IAAP;AACD;;AAED,IAAIQ,GAAG,GAAG;AACR,OAAK,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACxB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAHO;AAIR,OAAK,UAASD,IAAT,EAAeC,IAAf,EAAqB;AACxB,WAAOD,IAAI,GAAGC,IAAd;AACD,GANO;AAOR,OAAK,UAASD,IAAT,EAAeC,IAAf,EAAqB;AACxB,QAAIA,IAAI,KAAK,CAAb,EAAgB,OAAO,KAAP;AAChB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAVO;AAWR,OAAK,UAASD,IAAT,EAAeC,IAAf,EAAqB;AACxB,WAAOD,IAAI,GAAGC,IAAd;AACD,GAbO;AAcR,OAAK,UAASD,IAAT,EAAeC,IAAf,EA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","sourcesContent":["//import React from 'react';\r\nfunction updateState(obj, name) {\r\n  // console.log(name === \"CE\");\r\n  let obj2 = Object.assign({}, obj);\r\n\r\n  if (isNaN(Number(name)) && name !== \".\") {\r\n    obj2 = state.updateOperation(name, obj);\r\n  } else {\r\n    obj2 = state.operands(name, obj);\r\n  }\r\n\r\n  //   if (name === \"=\") {\r\n  //     if (obj2.operation && obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2);\r\n  //       if (obj2.warning){\r\n  //         obj2.op2 = obj2.operation  = null;\r\n  //         obj2.final = \"done\";\r\n  //         obj2.op1 = 0;\r\n  //       }\r\n  //       else {\r\n  //         obj2.final = \"done\";\r\n  //         obj2.op2 = obj2.operation = null;\r\n  //       }\r\n  //     }\r\n  //      else if (!obj2.op1 && obj2.operation) {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing second operand\";\r\n  //     }\r\n\r\n  //   }\r\n  //    else if (name === \"CE\") {\r\n  //     obj2.op1 = 0;\r\n  //   }\r\n  //    else if (name === \"C\") {\r\n  //     obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\r\n  //   }\r\n  //    else if (name[0] === \"U\") {\r\n  //     if (obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2, name);\r\n  //       if (!obj2.op2)\r\n  //         obj2.final = \"Done\";\r\n  //     }\r\n  //      else {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing operand\";\r\n  //     }\r\n  //   }\r\n  //    else if (obj2.operation === null) {\r\n  //     obj2.op2 = obj2.op1;\r\n  //     obj2.warning = \"\";\r\n  //     obj2.op1 = null;\r\n  //     obj2.operation = name;\r\n  //   }\r\n  //    else {\r\n  //     if (obj2.op1) {\r\n  //       obj2 = ops.calculate(obj2);\r\n  //       if (obj2.warning) {\r\n  //         obj2.op2 = obj2.final = obj2.operation = null;\r\n  //         obj2.op1 = 0;\r\n  //       }\r\n  //       else {\r\n  //         obj2.op2 = obj2.op1;\r\n  //         obj2.op1 = null;\r\n  //         obj2.operation = name;\r\n  //       }\r\n  //     }\r\n  //      else {\r\n  //       obj2.op2 = obj2.operation = null;\r\n  //       obj2.op1 = 0;\r\n  //       obj2.final = \"Done\";\r\n  //       obj2.warning = \"missing second operand\";\r\n  //     }\r\n  //   }\r\n  // }\r\n  //  else if (!isNaN(Number(name))) {\r\n  //   if (!obj2.op1  || obj2.final) {\r\n  //     obj2.op1 = name;\r\n  //     obj2.final = 0;\r\n  //     obj2.warning = null;\r\n  //   }\r\n  //    else\r\n  //     obj2.op1 = obj2.op1 + name;\r\n  // }\r\n  //  else {\r\n  //   if (obj2.op1 === null)\r\n  //     obj2.op1 = \"0.\";\r\n  //   else\r\n  //     obj2.op1 = obj2.op1 + \".\";\r\n  // }\r\n  return obj2;\r\n}\r\n\r\nlet ops = {\r\n  \"+\": function(num1, num2) {\r\n    return num1 + num2;\r\n  },\r\n  \"*\": function(num1, num2) {\r\n    return num1 * num2;\r\n  },\r\n  \"/\": function(num1, num2) {\r\n    if (num2 === 0) return \"Err\";\r\n    return num1 / num2;\r\n  },\r\n  \"-\": function(num1, num2) {\r\n    return num1 - num2;\r\n  },\r\n  \"%\": function(num1, num2) {\r\n    return num1 % num2;\r\n  },\r\n  Usqrt: function(num1) {\r\n    return Math.sqrt(num1);\r\n  },\r\n  AC: function(obj) {\r\n    obj.op1 = \"0\";\r\n    obj.op2 = obj.operation = obj.warning = null;\r\n  },\r\n  CE: function(str) {\r\n    return str.substr(0, str.length - 1);\r\n  },\r\n  calculate: function(obj, name) {\r\n    let obj2 = Object.assign({}, obj);\r\n    if (!name)\r\n      obj2.op1 = \"\" + ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));\r\n    else obj2.op1 = \"\" + ops[name](Number(obj2.op1));\r\n    if (obj2.op1 === \"Err\") {\r\n      obj2.warning = \"Err\";\r\n    }\r\n    return obj2;\r\n  }\r\n};\r\n\r\nlet state = {\r\n  next_op: 1,\r\n  //done: false,\r\n  operands: function(name, obj) {\r\n    let obj2 = Object.assign({}, obj);\r\n    if (!obj2.warning)\r\n      if (state.next_op) {\r\n        if (name === \".\") obj2.op1 = \"0.\";\r\n        else obj2.op1 = name;\r\n        state.next_op = 0;\r\n      } else obj2.op1 = obj2.op1 + name;\r\n    return obj2;\r\n  },\r\n  updateOperation: function(name, obj) {\r\n    let obj2 = Object.assign({}, obj);\r\n    if (!obj2.warning || (obj2.warning && name === \"AC\")) {\r\n      if (name === \"AC\") {\r\n        ops[name](obj2);\r\n        state.next_op = 1;\r\n      } else if (name === \"=\") {\r\n        if (!state.next_op && obj2.operation) {\r\n          obj2 = ops.calculate(obj2);\r\n          if (obj2.warning) {\r\n            obj2.op1 = \"0\";\r\n          }\r\n        }\r\n        obj2.op2 = obj2.operation = null;\r\n        state.next_op = 1;\r\n      } else if (name === \"CE\") {\r\n        if (!state.next_op) {\r\n          obj2.op1 = ops[name](obj2.op1);\r\n          if (obj2.op1 === \"\") state.next_op = 1;\r\n        }\r\n      } else if (name[0] === \"U\") obj2.op1 = ops[name](obj2.op1);\r\n      else {\r\n        if (obj2.operation === null) {\r\n          obj2.operation = name;\r\n          obj2.op2 = obj2.op1;\r\n          state.next_op = 1;\r\n        } else {\r\n          if (!state.next_op) {\r\n            obj2 = ops.calculate(obj2);\r\n            if (obj2.warning) {\r\n              obj2.op1 = \"0\";\r\n              obj2.op2 = obj2.operation = null;\r\n            } else {\r\n              obj2.operation = name;\r\n              obj2.op2 = obj2.op1;\r\n            }\r\n            state.next_op = 1;\r\n          } else {\r\n            obj2.operation = name;\r\n            state.next_op = 1;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    return obj2;\r\n  }\r\n};\r\n\r\nexport default updateState;\r\n"]},"metadata":{},"sourceType":"module"}