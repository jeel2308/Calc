{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vatsal\\\\Documents\\\\React\\\\calculator\\\\src\\\\Button.js\";\nimport React, { Component } from \"react\";\nimport './button.css';\n\nclass Button extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleClick = () => {\n      this.props.onClick(this.props.name);\n    };\n\n    this.handleClass = name => {\n      if (isNaN(Number(name)) && name !== \".\") return \"button ops\";else return \"button\";\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      className: this.handleClass(this.props.name),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.name));\n  }\n\n}\n\nexport default Button;","map":{"version":3,"sources":["C:/Users/vatsal/Documents/React/calculator/src/Button.js"],"names":["React","Component","Button","handleClick","props","onClick","name","handleClass","isNaN","Number","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAO,cAAP;;AAEA,MAAMC,MAAN,SAAqBD,SAArB,CAA8B;AAAA;AAAA;;AAAA,SAC3BE,WAD2B,GACb,MAAM;AAChB,WAAKC,KAAL,CAAWC,OAAX,CAAmB,KAAKD,KAAL,CAAWE,IAA9B;AACH,KAH0B;;AAAA,SAI3BC,WAJ2B,GAIZD,IAAD,IAAU;AACpB,UAAGE,KAAK,CAACC,MAAM,CAACH,IAAD,CAAP,CAAL,IAAuBA,IAAI,KAAG,GAAjC,EACE,OAAO,YAAP,CADF,KAGE,OAAO,QAAP;AACL,KAT0B;AAAA;;AAU3BI,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAQ,MAAA,OAAO,EAAE,KAAKP,WAAtB;AAAmC,MAAA,SAAS,EAAE,KAAKI,WAAL,CAAiB,KAAKH,KAAL,CAAWE,IAA5B,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWE,IADhB,CADF,CADJ;AAMH;;AAjB0B;;AAqB9B,eAAeJ,MAAf","sourcesContent":["import React,{Component} from \"react\";\r\nimport './button.css';\r\n\r\nclass Button extends Component{\r\n   handleClick = () => {\r\n       this.props.onClick(this.props.name);\r\n   }\r\n   handleClass = (name) => {\r\n       if(isNaN(Number(name)) && name!==\".\")\r\n         return \"button ops\";\r\n       else\r\n         return \"button\";\r\n   }\r\n   render(){\r\n       return (\r\n           <div>\r\n             <button onClick={this.handleClick} className={this.handleClass(this.props.name)}>\r\n                 {this.props.name}</button>\r\n           </div>\r\n       );\r\n   }\r\n}\r\n\r\n\r\nexport default Button;"]},"metadata":{},"sourceType":"module"}