{"ast":null,"code":"//import React from 'react';\nfunction updateState(obj, name) {\n  let obj2 = Object.assign({}, obj);\n\n  if (isNaN(Number(name)) && name !== \".\") {\n    if (name === \"=\") {\n      obj2 = ops.calculate(obj2);\n      if (obj2.warning) obj2.op1 = obj2.op2 = obj2.operation = obj2.final = null;else obj2.final = \"done\";\n    } else if (name === \"CE\") {\n      obj2.op1 = null;\n    } else if (name === \"C\") {\n      obj2.op1 = obj2.op1.substr(0, obj2.op1.length - 1);\n    } else if (obj2.operation === null) {\n      obj2.op2 = obj2.op1;\n      obj2.op1 = null;\n      obj2.operation = name;\n    } else {\n      obj2 = ops.calculate(obj2);\n      if (obj2.warning) obj2.op1 = obj2.op2 = obj2.final = obj2.operation = null;else {\n        obj2.op2 = obj2.op1;\n        obj2.op1 = null;\n        obj2.operation = name;\n      }\n    }\n  } else if (!isNaN(Number(name))) {\n    if (obj2.op1 === null || obj2.final) {\n      obj2.op1 = name;\n      obj2.final = 0;\n      obj2.warning = null;\n    } else obj2.op1 = obj2.op1 + name;\n  } else {\n    if (obj2.op1 === null) obj2.op1 = \"0.\";else obj2.op1 = obj2.op1 + \".\";\n  }\n\n  return obj2;\n}\n\nlet ops = {\n  \"+\": function (num1, num2) {\n    return num1 + num2;\n  },\n  \"*\": function (num1, num2) {\n    return num1 * num2;\n  },\n  \"/\": function (num1, num2) {\n    if (num2 === 0) return \"Err\";\n    return num1 / num2;\n  },\n  \"-\": function (num1, num2) {\n    return num1 - num2;\n  },\n  \"%\": function (num1, num2) {\n    return num1 % num2;\n  },\n  \"calculate\": function (obj) {\n    let obj2 = Object.assign({}, obj);\n    obj2.op1 = ops[obj2.operation](Number(obj2.op2), Number(obj2.op1));\n\n    if (obj2.op1 == \"Infinity\") {\n      obj2.warning = \"Err\";\n    }\n\n    return obj2;\n  }\n};\nexport default updateState;","map":{"version":3,"sources":["C:/Users/vatsal/Documents/React/calculator/src/Calculate.js"],"names":["updateState","obj","name","obj2","Object","assign","isNaN","Number","ops","calculate","warning","op1","op2","operation","final","substr","length","num1","num2"],"mappings":"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","sourcesContent":["//import React from 'react';\r\nfunction updateState(obj,name){\r\n    let obj2 = Object.assign({},obj);\r\n  if(isNaN(Number(name)) && name!==\".\"){\r\n      if(name===\"=\"){\r\n        obj2 = ops.calculate(obj2);\r\n        if(obj2.warning)\r\n          obj2.op1 = obj2.op2 = obj2.operation = obj2.final = null;\r\n        else\r\n          obj2.final = \"done\"; \r\n      }\r\n      else if(name===\"CE\"){\r\n        obj2.op1 = null;\r\n      }\r\n      else if(name===\"C\"){\r\n        obj2.op1 = obj2.op1.substr(0,obj2.op1.length-1);\r\n      }\r\n      else if(obj2.operation===null){\r\n        obj2.op2 = obj2.op1;\r\n        obj2.op1 = null;\r\n        obj2.operation = name;\r\n      }\r\n      else{\r\n        obj2 = ops.calculate(obj2);\r\n        if(obj2.warning)\r\n          obj2.op1 = obj2.op2 = obj2.final = obj2.operation = null;\r\n        else{\r\n          obj2.op2 = obj2.op1;\r\n          obj2.op1 = null;\r\n          obj2.operation = name;\r\n        } \r\n      }\r\n  }\r\n  else if(!isNaN(Number(name))){\r\n    if(obj2.op1===null||obj2.final){\r\n        obj2.op1 = name;\r\n        obj2.final = 0;\r\n        obj2.warning = null;\r\n      }\r\n    else\r\n        obj2.op1 = obj2.op1 + name;\r\n  }\r\n  else {\r\n     if(obj2.op1===null)\r\n        obj2.op1 = \"0.\";\r\n     else\r\n        obj2.op1 = obj2.op1 + \".\";\r\n  }\r\n  return obj2;\r\n}\r\n\r\nlet ops = {\r\n    \"+\" : function(num1,num2){\r\n         return num1 + num2;\r\n    },\r\n    \"*\" : function(num1,num2){\r\n      return num1* num2;\r\n    },\r\n    \"/\" : function(num1,num2){\r\n      if(num2===0)\r\n        return \"Err\";\r\n      return num1/num2;\r\n    },\r\n    \"-\" : function(num1,num2){\r\n      return num1-num2;\r\n    },\r\n    \"%\" : function(num1,num2){\r\n      return num1%num2;\r\n    },\r\n    \"calculate\" : function(obj){\r\n      let obj2 = Object.assign({},obj);\r\n      obj2.op1 = ops[obj2.operation](Number(obj2.op2),Number(obj2.op1));\r\n      if(obj2.op1==\"Infinity\"){\r\n        obj2.warning = \"Err\";\r\n      }\r\n     return obj2;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default updateState;"]},"metadata":{},"sourceType":"module"}